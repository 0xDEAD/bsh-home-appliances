#
# bsh-dbus-waq24468-09es.yaml -- Interface B/S/H/ washing machine WAQ24468/09ES (spanish version)
#
# This file has been contributed by
# (C) 2024 Akdri
# https://github.com/akdri
#
# (C) 2024 Hajo Noerenberg
#
# Usage: Connect D-Bus DATA pin to pin (GPIO14)
#
# http://www.noerenberg.de/
# https://github.com/hn/bsh-home-appliances
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3.0 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.txt>.
#

substitutions:
  devicename: lavadora
  upper_devicename: Lavadora Bosch WAQ24468


esphome:
  name: $devicename
  friendly_name: $upper_devicename

external_components:
  - source: github://hn/bsh-home-appliances@master

esp8266:
  board: esp01_1m

logger:

api:
  encryption:
    key: !secret api_key
ota:
- platform: esphome
  id: my_ota
  password: !secret ota_pass

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  output_power: 10.5dB
  manual_ip:
    static_ip: !secret wifi_ip_lavadora
    gateway: !secret wifi_gateway
    subnet: !secret wifi_subnet

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lavadora AP"
    password: !secret wifi_password

captive_portal:

uart:
  id: dbus_uart
  rx_pin: GPIO14
  baud_rate: 9600

bshdbus:
  uart_id: dbus_uart

binary_sensor:
  - platform: bshdbus
    dest: 0x14
    command: 0x1007
    binary_sensors:
      - id: bsh_wm_feat_waterplus
        name: Extra
        icon: mdi:water-plus
        lambda: return (x[0] >> 1) & 0x01;
      - id: bsh_wm_feat_eco
        name: Eco Perfect
        icon: mdi:sprout-outline
        lambda: return (x[0] >> 5) & 0x01;
      - id: bsh_wm_feat_prewash
        name: Rápido
        icon: mdi:clock-fast
        lambda: |-
          int sensor_value = x[0];
            int mask = 0b01100000; // Máscara para los bits en las posiciones 6 y 7
            if ((sensor_value & mask) == 0) {
                // Los bits en las posiciones 6 y 7 están a cero
                return 1; // O cualquier valor que indiques para el caso positivo
            } else {
                // Al menos uno de los bits está en 1
                return 0; // O cualquier valor que indiques para el caso negativo
            }
      - id: bsh_wm_feat_anticrease
        name: Fácil Plancha
        icon: mdi:iron
        lambda: return (x[1] >> 7) & 0x01;
  - platform: bshdbus
    dest: 0x15
    command: 0x1100
    binary_sensors:
      - id: bsh_wm_start_button
        name: Start
        icon: mdi:button-pointer
        lambda: return 1;
        on_press:
          - delay: 5s
          - lambda: id(bsh_wm_start_button).publish_state(NAN);
  - platform: bshdbus
    dest: 0x26
    command: 0x1701
    binary_sensors:
      - id: bsh_wm_program_started
        name: Lavando
        entity_category: diagnostic
        icon: mdi:ray-start-arrow
        lambda: return 1;
        on_press:
          - delay: 1s
          - lambda: id(bsh_wm_program_started).publish_state(NAN);

sensor:
  - platform: bshdbus
    dest: 0x14
    command: 0x1004
    sensors:
      - id: bsh_wm_temperature
        name: Temperatura
        device_class: temperature
        state_class: measurement
        unit_of_measurement: °C
        accuracy_decimals: 0
        lambda: return x[0];
        filters:
          - calibrate_linear:
             method: exact
             datapoints:
              - 0 -> 0.0
              - 1 -> 20.0
              - 2 -> 30.0
              - 3 -> 40.0
              - 4 -> 60.0
              - 5 -> 70.0
              - 6 -> 80.0
              - 7 -> 90.0
  - platform: bshdbus
    dest: 0x14
    command: 0x1006
    sensors:
      - id: bsh_wm_rpm2
        internal: true
        #name: Centrifugado
        #device_class: speed
        #state_class: measurement
        #unit_of_measurement: rpm
        accuracy_decimals: 0
        lambda: return (x[0]);
        filters:
          - multiply: 10

  - platform: bshdbus
    dest: 0x14
    command: 0x1008
    sensors:
      - id: ac_spin
        internal: true
        lambda: |-
          if (x[0] == 0x00) {
                return 1;
            } else {
                return 0;
            }
        on_value:
          then:
            - component.update: bsh_wm_rpm

  - platform: template
    name: Centrifugado
    id: bsh_wm_rpm
    device_class: speed
    state_class: measurement
    unit_of_measurement: rpm
    update_interval: never
    lambda: return (int) (id(bsh_wm_rpm2).state * id(ac_spin).state) ;
    accuracy_decimals: 0

  - platform: bshdbus
    dest: 0x17
    command: 0x4010
    sensors:
      - id: bsh_wm_unbalance_x
        name: Desequilibrio X
        entity_category: diagnostic
        icon: mdi:axis-x-rotate-clockwise
        state_class: measurement
        unit_of_measurement: m/s²
        accuracy_decimals: 0
        lambda: return (int16_t) ((x[1] << 8) | x[2]);
        filters:
          - throttle: 3s
          - timeout: 90s
      - id: bsh_wm_unbalance_z
        name: Desequilibrio Z
        entity_category: diagnostic
        icon: mdi:axis-z-rotate-clockwise
        state_class: measurement
        unit_of_measurement: m/s²
        accuracy_decimals: 0
        lambda: return (int16_t) ((x[3] << 8) | x[4]);
        filters:
          - throttle: 3s
          - timeout: 90s
      - id: bsh_wm_unbalance_y
        name: Desequilibrio Y
        entity_category: diagnostic
        icon: mdi:axis-y-rotate-clockwise
        state_class: measurement
        unit_of_measurement: m/s²
        accuracy_decimals: 0
        lambda: return (int16_t) ((x[5] << 8) | x[6]);
        filters:
          - throttle: 3s
          - timeout: 90s
  - platform: bshdbus
    dest: 0x26
    command: 0x1020
    sensors:
      - id: bsh_wm_washmodule
        name: Ciclo Lavado
        entity_category: diagnostic
        icon: mdi:map-marker-path
        accuracy_decimals: 0
        unit_of_measurement: ciclo
        lambda: return x[0];

  - platform: bshdbus
    dest: 0x16
    command: 0x3015
    sensors:

# Para el byte x[1] FOR TEST Los siguientes sensores son para testear elimine o comente para descartarlos
      - id: bsh_wm_3015_1_8
        name: 3015-1-08
        icon: mdi:numeric-8-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1] >> 7) & 0x01;

      - id: bsh_wm_3015_1_7
        name: 3015-1-07
        icon: mdi:numeric-7-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1] >> 6) & 0x01;

      - id: bsh_wm_3015_1_6
        name: 3015-1-06
        icon: mdi:numeric-6-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1] >> 5) & 0x01;

      - id: bsh_wm_3015_1_5
        name: 3015-1-05
        icon: mdi:numeric-5-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1] >> 4) & 0x01;

      - id: bsh_wm_3015_1_4
        name: 3015-1-04
        icon: mdi:numeric-4-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1] >> 3) & 0x01;

      - id: bsh_wm_3015_1_3
        name: 3015-1-03
        icon: mdi:numeric-3-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1] >> 2) & 0x01;

      - id: bsh_wm_3015_1_2
        name: 3015-1-02
        icon: mdi:numeric-2-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1] >> 1) & 0x01;

      - id: bsh_wm_3015_1_1
        name: 3015-1-01
        icon: mdi:numeric-1-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[1]) & 0x01;

    # Para el byte x[2] dechar y izquierda

      - id: bsh_wm_turn_left
        name: Giro Izquiereda
        icon: mdi:rotate-left
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[2] >> 4) & 0x01;

      - id: bsh_wm_turn_right
        name: Giro Derecha
        icon: mdi:rotate-right
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[2] >> 3) & 0x01;


    # Para el byte x[3] y x[4] son rpm/16 Reales
      - id: bsh_wm_rpm_ontime
        name: rpm actuales
        accuracy_decimals: 0
        device_class: speed
        unit_of_measurement: rpm
        lambda: return (((int16_t) x[3] << 8 | x[4])/16);


    # Para el byte x[6] y x[7] son rpm/16 objetivo
      - id: bsh_wm_rpm_objetivo
        name: rpm objectivo
        accuracy_decimals: 0
        device_class: speed
        unit_of_measurement: rpm
        lambda: return (((int16_t) x[6] << 8 | x[7])/16);


  - platform: bshdbus
    dest: 0x2a
    command: 0x1600
    sensors:
      - id: bsh_wm_remain
        name: Restante
        device_class: duration
        state_class: measurement
        unit_of_measurement: min
        accuracy_decimals: 0
        lambda: return x[0];

  - platform: bshdbus
    dest: 0x26
    command: 0x1200
    sensors:
      - id: bsh_wm_1200_3_1
        name: 1200-3-01
        icon: mdi:numeric-1-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[3]) & 0x01;

      - id: bsh_wm_1200_2_3
        name: 1200-2-03
        icon: mdi:numeric-3-box-outline
        accuracy_decimals: 0
        unit_of_measurement: u
        lambda: return (x[2] >> 2) & 0x01;

text_sensor:
  - platform: bshdbus
    dest: 0x14
    command: 0x1005
    text_sensors:
      - id: bsh_wm_program
        name: Programa
        icon: mdi:numeric
        lambda: return std::to_string(x[2]);
        filters:
          - map:
            - 0 -> Apagado
            - 1 -> Algodón
            - 2 -> Algodón +
            - 3 -> Sintéticos
            - 4 -> Sintéticos +
            - 5 -> Mix
            - 6 -> Delicado
            - 7 -> Lana
            - 8 -> Centrifugado
            - 9 -> Desagüe
            - 10 -> Rapido 15
            - 11 -> Ropa Oscura
            - 12 -> Camisas/Blusas
            - 13 -> Plumas
            - 14 -> Sport
            - 15 -> Antialergias
  - platform: bshdbus
    dest: 0x26
    command: 0x1200
    text_sensors:
      - id: bsh_wm_door
        name: Puerta
        icon: mdi:door
        lambda: return std::to_string(x[0]);
        filters:
          - map:
            - 0 -> Cerrada
            - 1 -> Bloqueada
            - 2 -> Abierta

  - platform: bshdbus
    dest: 0x26
    command: 0x1101
    text_sensors:
      - id: bsh_wm_state
        name: Estado
        icon: mdi:state-machine
        lambda: return std::to_string(x[0]);
        filters:
          - map:
            - 0 -> Finalizada
            - 1 -> Acabando
            - 2 -> Lavando

